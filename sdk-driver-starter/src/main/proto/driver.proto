// Copyright 2015 The gRPC Authors
// protoc -I . --go_out=plugins=grpc:. ./driver.proto


// protoc -I ./ --go_out=. ./driver/driver.proto
// protoc -I ./ --go-grpc_out=. driver/driver.proto

// kratos proto server ./grpc/driver/driver.proto -t grpc/driver

syntax = "proto3";

package driver;

import "api.proto";

option go_package = "./driver;driver";
option java_package = "io.github.airiot.sdk.driver.grpc.driver";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;
option java_generic_services = false;

service DriverService {
  rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse) {}
  rpc Event (Request) returns (Response) {}
  rpc CommandLog (Request) returns (Response) {}
  rpc UpdateTableData (Request) returns (Response) {}
  rpc SchemaStream (stream SchemaResult) returns (stream SchemaRequest) {}
  rpc StartStream (stream StartResult) returns (stream StartRequest) {}
  rpc RunStream (stream RunResult) returns (stream RunRequest) {}
  rpc WriteTagStream (stream RunResult) returns (stream RunRequest) {}
  rpc BatchRunStream (stream BatchRunResult) returns (stream BatchRunRequest) {}
  rpc DebugStream (stream Debug) returns (stream Debug) {}

  rpc BatchCommand (api.CreateRequest) returns (api.Response) {}
  rpc ChangeCommand (api.UpdateRequest) returns (api.Response) {}
}


message UpdateRequest {
  string id = 1;
  bytes data = 2;
}

message Response {
  bool status = 1;
  int32 code = 2;
  string info = 3;
  string detail = 4;
  bytes result = 5;
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
  repeated Error errors = 2;
}

message Error {
  enum ErrorCode {
    Schema = 0;
    Start = 1;
    Run = 2;
    Write = 3;  // Used only by the Watch method.
    BatchRun = 4;  // Used only by the Watch method.
    Debug = 5;  // Used only by the Watch method.
  }
  ErrorCode code = 1;
  string message = 2;
}

message Request {
  string project = 1;
  bytes data = 4;
}

message SchemaRequest {
  string request = 1;
}

message SchemaResult {
  string request = 1;
  bytes message = 2;
}

message StartRequest {
  string request = 1;
  bytes config = 2;
}

message StartResult {
  string request = 1;
  bytes message = 2;
}

message RunRequest {
  string request = 1;
  string tableId = 2;
  string id = 3;
  string serialNo = 4;
  bytes command = 5;
}

message RunResult {
  string request = 1;
  bytes message = 2;
}

message BatchRunRequest {
  string request = 1;
  string tableId = 2;
  repeated string id = 3;
  string serialNo = 4;
  bytes command = 5;
}

message BatchRunResult {
  string request = 1;
  bytes message = 2;
}

message Debug {
  string request = 1;
  bytes data = 2;
}
